{"version":3,"sources":["d3Controls.js","useCustomHover.js","sliders.js","index.js","HoverDescription.js","useEAData.js"],"names":["toRadians","angle","Math","PI","d3Controls","fov","near","far","defaultCameraZoom","renderer","camera","size","width","height","getScaleFromZ","z","tan","getZFromScale","scale","threeZoom","zoom","scaleExtent","on","x","y","k","position","set","zoomHandler","event","transform","view","select","domElement","call","initialScale","initialTransform","zoomIdentity","translate","THREE","require","ProgressBarSlider","withStyles","root","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","SpeedSlider","color","margintop","marginleft","top","background","ProgressBar","min","max","now","label","onChange","className","defaultValue","valueLabelDisplay","aria-label","value","step","Typography","SpeedBar","valueLabelFormat","d","Color","colors","sprite","TextureLoader","load","getRandomNumber","random","getRandomPoints","positions","Array","fill","forEach","push","getRandomColors","parseInt","length","r","g","b","Scene","data","points","pointsData","setHoverData","useThree","scene","aspect","gl","mouse","ref","useRef","pointsRef","geometryRef","useEffect","highlightRef","highlightPoint","useMemo","point","Float32Array","show","onPointHover","useCallback","index","positionsArray","slice","i","colorsArray","current","attributes","needsUpdate","pointColor","map","toFixed","description","showLeft","right","hoverWidth","style","HoverDescription","onPointOut","raycaster","Raycaster","params","Points","threshold","checkIntersects","setFromCamera","intersects","intersectObject","intersect","sort","distanceToRay","project","addScalar","divideScalar","useCustomHover","nPoints","useSpring","pointsSpring","colorsSpring","setSpring","useFrame","getValue","v","attach","attachObject","count","array","itemSize","usage","DynamicDrawUsage","transparent","alphaTest","sizeAttenuation","vertexColors","VertexColors","ReactDOM","render","url","n","useState","speed","setSpeed","time","setTime","play","setPlay","hoverData","playRef","playCb","setPlayCb","removeTimeout","clearTimeout","playFunc","setTimeout","tooglePlay","document","addEventListener","e","code","type","onClick","icon","faStepBackward","faCaretLeft","faPause","faPlay","faCaretRight","faStepForward","href","getElementById"],"mappings":"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","file":"static/js/main.0497f273.chunk.js","sourcesContent":["// From https://observablehq.com/@grantcuster/using-three-js-for-2d-data-visualization\nimport { zoom, event, select, zoomIdentity } from 'd3';\n\nconst toRadians = angle => (angle * (Math.PI/180));\n\nexport const d3Controls = ({ fov, near, far, defaultCameraZoom, renderer, camera, size }) => {\n  const { width, height } = size;\n\n  const zoomHandler = ({ x, y, k }) => {\n    camera.position.set(\n      -(x -  width/2) / k, // x\n       (y - height/2) / k, // y\n       getZFromScale(k)    // z\n    )\n  };\n\n  const getScaleFromZ = z => ( height / (2 * z * Math.tan(toRadians(fov/2))) );\n  const getZFromScale = scale => ( height / scale / (2 * Math.tan(toRadians(fov/2))) );\n\n  const threeZoom = zoom()\n    .scaleExtent([getScaleFromZ(far), getScaleFromZ(near)])\n    .on('zoom', () => {\n      zoomHandler(event.transform);\n    });\n  \n  // Add zoom listener\n  const view = select(renderer.domElement);\n  view.call(threeZoom);\n  const initialScale = getScaleFromZ(defaultCameraZoom);\n  const initialTransform = zoomIdentity\n    .translate(width/2, height/2)\n    .scale(initialScale);    \n  threeZoom.transform(view, initialTransform);\n  camera.position.set(0, 0, defaultCameraZoom);\n\n  // Double click resets camera\n  view.on('dblclick.zoom', () => {\n    threeZoom.transform(view, initialTransform);\n    camera.position.set(0, 0, defaultCameraZoom);\n  });\n};\n","import React, { useMemo, useEffect, useCallback } from 'react';\nimport { select } from 'd3';\nconst THREE = require('three');\n\nexport const useCustomHover = ({\n  renderer,\n  mouse,\n  camera,\n  size,\n  pointsRef,\n  onPointHover,\n  onPointOut\n  }) => {\n  const raycaster = useMemo(() => {\n    const raycaster = new THREE.Raycaster();\n    raycaster.params.Points.threshold = 1;\n    return raycaster;\n  }, []);\n\n  const checkIntersects = useCallback( position => {\n    raycaster.setFromCamera(position, camera);\n    let intersects = raycaster.intersectObject(pointsRef.current);\n    if (intersects[0]) {\n      const intersect = intersects.sort(({ distanceToRay }) => distanceToRay)[0];\n      const point = intersect.point;\n      point.project(camera).addScalar(1).divideScalar(2);\n      const x = point.x * size.width;\n      const y = (1-point.y) * size.height;\n      onPointHover({ index: intersect.index, x, y });\n    } else {\n      onPointOut();\n    }\n  }, [ size, onPointHover ]);\n\n  useEffect(() => {\n    const view = select(renderer.domElement);\n    view.on('mousemove', () => {\n      checkIntersects(mouse);\n    });\n  }, [ renderer, mouse, checkIntersects ]);\n\n};\n\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst ProgressBarSlider = withStyles({ \n  root: {\n    // color: '#52af77',\n    height: 8,\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus,&:hover,&$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\nconst SpeedSlider = withStyles({\n  root: {\n    color: '#8f8f8f',\n  },\n  thumb: {\n    height: 15,\n    width: 15,\n    margintop: -5,\n    marginleft: -5,\n    color: '#787878',\n  },\n  valueLabel: {\n    top: 20,\n    '& *': {\n      background: 'transparent',\n      color: '#000',\n      width: 50\n    },\n  },\n  rail: {\n    height: 5,\n  },\n})(Slider);\n\nexport const ProgressBar = ({ min, max, now, label, onChange }) => {\n  return (\n    <div className='row'>\n      <ProgressBarSlider\n        className='col-8 offset-2'\n        defaultValue={0}\n        valueLabelDisplay='off'\n        aria-label='pretto slider'\n        min={min}\n        max={max}\n        value={now}\n        step={1}\n        onChange={onChange}\n      />\n      <Typography className='col-2 align-self-center'>{label}</Typography>\n    </div>\n  );\n};\n\nexport const SpeedBar = ({ min, max, defaultValue, onChange }) => {\n  return (\n    <div className='row justify-content-center'>\n      <SpeedSlider\n        className='col-3'\n        defaultValue={defaultValue}\n        valueLabelFormat={d => `${d} ms`}\n        valueLabelDisplay='on'\n        aria-label='pretto slider'\n        min={min}\n        max={max}\n        step={100}\n        onChange={onChange}\n        track={false}\n      />\n    </div>\n  );\n};\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React, { useRef, useMemo, useState, useEffect, useCallback } from 'react';\nimport ReactDOM from 'react-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay, faPause, faCaretLeft, faCaretRight, faStepBackward, faStepForward } from '@fortawesome/free-solid-svg-icons'\nimport { Canvas, useThree, useFrame } from 'react-three-fiber';\nimport { useSpring } from 'react-spring-three';\nimport { HoverDescription } from './HoverDescription';\nimport { d3Controls } from './d3Controls';\nimport { useCustomHover } from './useCustomHover';\nimport { useEAData } from './useEAData';\nimport { ProgressBar, SpeedBar } from './sliders';\nimport './index.css';\nconst THREE = require('three');\n// const d3 = require('d3');\n\n// controls\nconst defaultSpeed = 1000;\n// camera settings\nconst fov = 30;\nconst near = 20;\nconst far = 150;\nconst defaultCameraZoom = 100;\n// canvas settings\nconst backgroundColor = new THREE.Color(0xefefef);\n// points generation\nconst nPoints = 100;\nconst randomScale = 50;\nconst pointsSize = 15;\nconst highlightPointSize = 40;\nconst colors = ['#ffd700', '#ffb14e', '#fa8775', '#ea5f94', '#cd34b5', '#9d02d7', '#0000ff'];\nconst sprite = new THREE.TextureLoader().load('textures/discNoShadow.png');\n\nconst getRandomNumber = () => (Math.random()-0.5)*randomScale;\n\nconst getRandomPoints = () => {\n  let positions = []\n  Array(nPoints).fill().forEach(() => {\n    positions.push(getRandomNumber(), getRandomNumber(), 0);\n  });\n  return positions;\n};\n\nconst getRandomColor = () => new THREE.Color(colors[parseInt(Math.random() * colors.length)]);\nconst getRandomColors = () => {\n  let colors = []\n  Array(nPoints).fill().forEach(() => {\n    const {r,g,b} = getRandomColor();\n    colors.push(r,g,b);\n  });\n  return colors;\n};\n\nconst Scene = ({\n  data: { points, colors, pointsData },\n  setHoverData\n}) => {\n  const { scene, aspect, gl, camera, size, mouse } = useThree();\n  const ref = useRef();\n  const pointsRef = useRef();\n  const geometryRef = useRef();\n\n  // d3 controls (zoom and pan)\n  useEffect(() => {\n    d3Controls({ fov, near, far, defaultCameraZoom, renderer: gl, camera, size});\n  }, [ gl, camera, size ])\n\n  // Custom hover\n  const highlightRef = useRef();\n  const highlightPoint = useMemo(() => ({\n    point: new Float32Array(3),\n    color: new Float32Array(3),\n    show: false,\n  }), []);\n\n  const onPointHover = useCallback(( { index, x, y } ) => {\n    // Highlight Point\n    positionsArray.slice(index*3,(index+1)*3).forEach( (d, i) => {highlightPoint.point[i] = d});\n    colorsArray.slice(index*3,(index+1)*3).forEach( (d, i) => {highlightPoint.color[i] = d});\n    highlightPoint.show = true;\n    highlightRef.current.attributes.position.needsUpdate = true;\n    highlightRef.current.attributes.color.needsUpdate = true;\n\n    // hover description\n    const pointColor = colors.slice(index*3, (index+1)*3).map(d => d.toFixed(2));\n    setHoverData(HoverDescription({\n      description: `mouse over: ${pointsData[index]}\\nColor: rgb(${pointColor})`,\n      top: y,\n      left: x,\n      size\n    }));\n  }, [ points, size, pointsData, colors ]);\n\n  const onPointOut = () => {\n    highlightPoint.show = false;\n    setHoverData('');\n  };\n\n  useCustomHover({ renderer: gl, mouse, camera, size, pointsRef, onPointHover, onPointOut });\n\n  // Initialize arrays\n  const positionsArray = useMemo(() => new Float32Array(nPoints*3), []);\n  const colorsArray = useMemo(() => new Float32Array(nPoints*3), []);\n\n  // Initialize springs\n  const [ { pointsSpring, colorsSpring }, setSpring ] = useSpring(() => ({\n    // initial position\n    pointsSpring: points,\n    colorsSpring: Array(nPoints*3).fill(1),\n  }));\n\n  // Animation effects\n  useEffect(() => {\n    setSpring({ pointsSpring: points });\n  }, [ points, setSpring ]);\n\n  useEffect(() => {\n    setSpring({ colorsSpring: colors });\n  }, [ colors, setSpring ]);\n\n  // Animate point change\n  useFrame(() => {\n    pointsSpring.getValue().forEach((v,i) => {\n      const value = (i%3) === 0 ? v*aspect : v; // consider aspect\n      positionsArray[i] = value;\n    });\n    colorsSpring.getValue().forEach((v,i) => {\n      colorsArray[i] = v;\n    })\n    geometryRef.current.attributes.position.needsUpdate = true;\n    geometryRef.current.attributes.color.needsUpdate = true;\n  });\n\n  useEffect(() => {\n    scene.background = backgroundColor;\n  }, [ scene ]);\n\n  return (\n    <group>\n\n      <mesh ref={ref}>\n        <points ref={pointsRef}>\n          <bufferGeometry\n            attach='geometry'\n            ref={geometryRef}\n          >\n            <bufferAttribute\n              attachObject={['attributes', 'position']}\n              count={points.length / 3}\n              array={positionsArray}\n              itemSize={3}\n              usage={THREE.DynamicDrawUsage}\n            />\n            <bufferAttribute\n              attachObject={['attributes', 'color']}\n              count={points.length / 3}\n              array={colorsArray}\n              itemSize={3}\n              usage={THREE.DynamicDrawUsage}\n            />\n          </bufferGeometry>\n          <pointsMaterial\n            attach='material'\n            size={pointsSize}\n            map={sprite}\n            transparent={true}\n            alphaTest={0.5}\n            sizeAttenuation={false}\n            vertexColors={THREE.VertexColors}\n          />\n        </points>\n      </mesh>\n\n      <mesh>\n        <points>\n          <bufferGeometry\n            attach='geometry'\n            ref={highlightRef}\n          >\n            <bufferAttribute\n              attachObject={['attributes', 'position']}\n              count={highlightPoint.show}\n              array={highlightPoint.point}\n              itemSize={3}\n              usage={THREE.DynamicDrawUsage}\n            /> \n            <bufferAttribute\n              attachObject={['attributes', 'color']}\n              count={1}\n              array={highlightPoint.color}\n              itemSize={3}\n              usage={THREE.DynamicDrawUsage}\n            />\n          </bufferGeometry>\n          <pointsMaterial\n            attach='material'\n            size={highlightPointSize}\n            map={sprite}\n            transparent={true}\n            alphaTest={0.5}\n            sizeAttenuation={false}\n            vertexColors={THREE.VertexColors}\n          />\n        </points>\n      </mesh>\n\n    </group>\n\n  );\n};\n\nconst App = () => {\n  const eaData = useEAData('filepath');\n  const n = eaData.n;\n  const [ speed, setSpeed ] = useState(defaultSpeed);\n  const [ time, setTime ] = useState(0);\n  const [ play, setPlay ] = useState(false);\n  const [ hoverData, setHoverData] = useState('');\n  const data = useMemo(() => ({\n    // points: eaData.points[time],\n    // colors: eaData.colors[time],\n    // pointsData: eaData.pointsData[time]\n    points: getRandomPoints(),\n    colors: getRandomColors(),\n    pointsData: getRandomColors()\n  }), [ time ]);\n\n  const playRef = useRef();\n  const [ playCb, setPlayCb ] = useState(null)\n  playRef.current = { n, time, speed, play };\n  \n  const removeTimeout = () => {\n    if ( playCb ) {\n      clearTimeout(playCb);\n      setPlayCb(null);\n    }\n  };\n\n  const playFunc = () => {\n    const { n, time, speed, play } = playRef.current;\n    if ( (time < (n-1)) & play ) {\n      setTime(time + 1);\n      setPlayCb(setTimeout(playFunc, speed));\n    } else {\n      setPlay(false);\n      removeTimeout();\n    }\n  };\n\n  const tooglePlay = () => {\n    const { speed, play } = playRef.current;\n    if ( !play ) {\n      setPlay(true);\n      setPlayCb(setTimeout(playFunc, speed));\n    } else {\n      setPlay(false);\n      removeTimeout();\n    }\n  };\n\n  // Playback keys\n  useEffect(() => {\n    document.addEventListener('keydown', e => {\n      if(e.code==='Space'){\n        tooglePlay();\n      }\n    });\n  }, [])\n\n  return (\n    <div style={{height: '100%'}}>\n      <div className='canvas-container h-100'>\n        <Canvas\n          camera={{\n            fov: fov,\n            near: 0.1,\n            far: far+1,\n            position: [0, 0, defaultCameraZoom]\n          }}\n        >\n          <Scene\n            data={data}\n            setHoverData={setHoverData}\n          />\n        </Canvas>\n        {hoverData}\n        <ProgressBar\n          min={0}\n          max={n-1}\n          now={time}\n          label={`${time}/${n-1} gen`}\n          onChange={(e,value) => setTime(value) }\n        />\n        <div className='controllers row justify-content-center'>\n          <div className='button-container'>\n            <button\n              type='button'\n              className='btn btn-default'\n              onClick={() => setTime(0)}\n            >\n              <FontAwesomeIcon icon={faStepBackward} />\n            </button>\n            <button\n              type='button'\n              className='btn btn-default'\n              onClick={() => setTime(d => Math.max(d-1, 0) )}\n            >\n              <FontAwesomeIcon icon={faCaretLeft} />\n            </button>\n            <button\n              type='button'\n              className='btn btn-default'\n              onClick={tooglePlay}\n            >\n              <FontAwesomeIcon icon={play ? faPause : faPlay} />\n            </button>\n            <button\n              type='button'\n              className='btn btn-default'\n              onClick={() => setTime(d => Math.min(d+1, n-1) )}\n            >\n              <FontAwesomeIcon icon={faCaretRight} />\n            </button>\n            <button\n              type='button'\n              className='btn btn-default'\n              onClick={() => setTime(n-1)}\n            >\n              <FontAwesomeIcon icon={faStepForward} />\n            </button>\n          </div>\n        </div>\n        <SpeedBar\n          min={100}\n          max={5000}\n          defaultValue={1000}\n          onChange={(e,value) => setSpeed(value)}\n        />\n        <div className='git-info row justify-content-end'>\n          <a href='https://github.com/renato145/show_evolution'>Source code</a>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\n\nconst hoverWidth = 150;\n\nexport const HoverDescription = ({ description, top, left, size }) => {\n  const showLeft = (left+hoverWidth) > size.width\n    ? size.right - hoverWidth\n    : Math.max(left-hoverWidth/2, size.left);\n\n  return (\n    <div\n      className='hover-description'\n      style={{\n        top: top,\n        left: showLeft,\n        width: hoverWidth\n      }}\n    >\n      {description}\n    </div>);\n};\n","import { useMemo } from 'react';\n\nexport const useEAData = url => ( \n  useMemo(() => {\n      return {\n        n: 40\n      };\n  }, [ url ])\n);"],"sourceRoot":""}