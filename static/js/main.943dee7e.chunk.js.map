{"version":3,"sources":["d3Controls.js","useCustomHover.js","index.js","HoverDescription.js","useEAData.js"],"names":["toRadians","angle","Math","PI","d3Controls","fov","near","far","defaultCameraZoom","renderer","camera","size","width","height","getScaleFromZ","z","tan","getZFromScale","scale","threeZoom","zoom","scaleExtent","on","x","y","k","position","set","zoomHandler","event","transform","view","select","domElement","call","initialScale","initialTransform","zoomIdentity","translate","THREE","require","backgroundColor","Color","colors","sprite","TextureLoader","load","getRandomNumber","random","getRandomPoints","positions","Array","fill","forEach","push","getRandomColors","parseInt","length","r","g","b","Scene","data","points","pointsData","setHoverData","useThree","scene","aspect","gl","mouse","ref","useRef","pointsRef","geometryRef","useEffect","highlightRef","highlightPoint","useMemo","point","Float32Array","color","show","onPointHover","useCallback","index","positionsArray","slice","d","i","colorsArray","current","attributes","needsUpdate","pointColor","map","toFixed","description","top","left","showLeft","right","max","hoverWidth","className","style","HoverDescription","onPointOut","raycaster","Raycaster","params","Points","threshold","checkIntersects","setFromCamera","intersects","intersectObject","intersect","sort","distanceToRay","project","addScalar","divideScalar","useCustomHover","nPoints","useSpring","pointsSpring","colorsSpring","setSpring","useFrame","getValue","v","value","background","attach","attachObject","count","array","itemSize","usage","DynamicDrawUsage","transparent","alphaTest","sizeAttenuation","vertexColors","VertexColors","ReactDOM","render","url","n","useState","speed","setSpeed","time","setTime","play","setPlay","hoverData","playRef","playFunc","setTimeout","ProgressBar","animated","min","now","label","type","onClick","icon","faStepBackward","faCaretLeft","faPause","faPlay","faCaretRight","faStepForward","Slider","defaultValue","getAriaValueText","valueLabelDisplay","step","marks","onChange","e","href","document","getElementById"],"mappings":"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","file":"static/js/main.943dee7e.chunk.js","sourcesContent":["// From https://observablehq.com/@grantcuster/using-three-js-for-2d-data-visualization\nimport { zoom, event, select, zoomIdentity } from 'd3';\n\nconst toRadians = angle => (angle * (Math.PI/180));\n\nexport const d3Controls = ({ fov, near, far, defaultCameraZoom, renderer, camera, size }) => {\n  const { width, height } = size;\n\n  const zoomHandler = ({ x, y, k }) => {\n    camera.position.set(\n      -(x -  width/2) / k, // x\n       (y - height/2) / k, // y\n       getZFromScale(k)    // z\n    )\n  };\n\n  const getScaleFromZ = z => ( height / (2 * z * Math.tan(toRadians(fov/2))) );\n  const getZFromScale = scale => ( height / scale / (2 * Math.tan(toRadians(fov/2))) );\n\n  const threeZoom = zoom()\n    .scaleExtent([getScaleFromZ(far), getScaleFromZ(near)])\n    .on('zoom', () => {\n      zoomHandler(event.transform);\n    });\n  \n  // Add zoom listener\n  const view = select(renderer.domElement);\n  view.call(threeZoom);\n  const initialScale = getScaleFromZ(defaultCameraZoom);\n  const initialTransform = zoomIdentity\n    .translate(width/2, height/2)\n    .scale(initialScale);    \n  threeZoom.transform(view, initialTransform);\n  camera.position.set(0, 0, defaultCameraZoom);\n\n  // Double click resets camera\n  view.on('dblclick.zoom', () => {\n    threeZoom.transform(view, initialTransform);\n    camera.position.set(0, 0, defaultCameraZoom);\n  });\n};\n","import React, { useMemo, useEffect, useCallback } from 'react';\nimport { select } from 'd3';\nconst THREE = require('three');\n\nexport const useCustomHover = ({\n  renderer,\n  mouse,\n  camera,\n  size,\n  pointsRef,\n  onPointHover,\n  onPointOut\n  }) => {\n  const raycaster = useMemo(() => {\n    const raycaster = new THREE.Raycaster();\n    raycaster.params.Points.threshold = 1;\n    return raycaster;\n  }, []);\n\n  const checkIntersects = useCallback( position => {\n    raycaster.setFromCamera(position, camera);\n    let intersects = raycaster.intersectObject(pointsRef.current);\n    if (intersects[0]) {\n      const intersect = intersects.sort(({ distanceToRay }) => distanceToRay)[0];\n      const point = intersect.point;\n      point.project(camera).addScalar(1).divideScalar(2);\n      const x = point.x * size.width;\n      const y = (1-point.y) * size.height;\n      onPointHover({ index: intersect.index, x, y });\n    } else {\n      onPointOut();\n    }\n  }, [ size, onPointHover ]);\n\n  useEffect(() => {\n    const view = select(renderer.domElement);\n    view.on('mousemove', () => {\n      checkIntersects(mouse);\n    });\n  }, [ renderer, mouse, checkIntersects ]);\n\n};\n\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React, { useRef, useMemo, useState, useEffect, useCallback } from 'react';\nimport ReactDOM from 'react-dom';\nimport ProgressBar from 'react-bootstrap/ProgressBar'\nimport Slider from '@material-ui/core/Slider';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay, faPause, faCaretLeft, faCaretRight, faStepBackward, faStepForward } from '@fortawesome/free-solid-svg-icons'\nimport { Canvas, useThree, useFrame } from 'react-three-fiber';\nimport { useSpring } from 'react-spring-three';\nimport { HoverDescription } from './HoverDescription';\nimport { d3Controls } from './d3Controls';\nimport { useCustomHover } from './useCustomHover';\nimport { useEAData } from './useEAData';\nimport './index.css';\nconst THREE = require('three');\n// const d3 = require('d3');\n\n// controls\nconst defaultSpeed = 1000;\n// camera settings\nconst fov = 30;\nconst near = 20;\nconst far = 150;\nconst defaultCameraZoom = 100;\n// canvas settings\nconst backgroundColor = new THREE.Color(0xefefef);\n// points generation\nconst nPoints = 100;\nconst randomScale = 50;\nconst pointsSize = 15;\nconst highlightPointSize = 40;\nconst colors = ['#ffd700', '#ffb14e', '#fa8775', '#ea5f94', '#cd34b5', '#9d02d7', '#0000ff'];\nconst sprite = new THREE.TextureLoader().load('textures/discNoShadow.png');\n\nconst getRandomNumber = () => (Math.random()-0.5)*randomScale;\n\nconst getRandomPoints = () => {\n  let positions = []\n  Array(nPoints).fill().forEach(() => {\n    positions.push(getRandomNumber(), getRandomNumber(), 0);\n  });\n  return positions;\n};\n\nconst getRandomColor = () => new THREE.Color(colors[parseInt(Math.random() * colors.length)]);\nconst getRandomColors = () => {\n  let colors = []\n  Array(nPoints).fill().forEach(() => {\n    const {r,g,b} = getRandomColor();\n    colors.push(r,g,b);\n  });\n  return colors;\n};\n\nconst Scene = ({\n  data: { points, colors, pointsData },\n  setHoverData\n}) => {\n  const { scene, aspect, gl, camera, size, mouse } = useThree();\n  const ref = useRef();\n  const pointsRef = useRef();\n  const geometryRef = useRef();\n\n  // d3 controls (zoom and pan)\n  useEffect(() => {\n    d3Controls({ fov, near, far, defaultCameraZoom, renderer: gl, camera, size});\n  }, [ gl, camera, size ])\n\n  // Custom hover\n  const highlightRef = useRef();\n  const highlightPoint = useMemo(() => ({\n    point: new Float32Array(3),\n    color: new Float32Array(3),\n    show: false,\n  }), []);\n\n  const onPointHover = useCallback(( { index, x, y } ) => {\n    // Highlight Point\n    positionsArray.slice(index*3,(index+1)*3).forEach( (d, i) => {highlightPoint.point[i] = d});\n    colorsArray.slice(index*3,(index+1)*3).forEach( (d, i) => {highlightPoint.color[i] = d});\n    highlightPoint.show = true;\n    highlightRef.current.attributes.position.needsUpdate = true;\n    highlightRef.current.attributes.color.needsUpdate = true;\n\n    // hover description\n    const pointColor = colors.slice(index*3, (index+1)*3).map(d => d.toFixed(2));\n    setHoverData(HoverDescription({\n      description: `mouse over: ${pointsData[index]}\\nColor: rgb(${pointColor})`,\n      top: y,\n      left: x,\n      size\n    }));\n  }, [ points, size, pointsData, colors ]);\n\n  const onPointOut = () => {\n    highlightPoint.show = false;\n    setHoverData('');\n  };\n\n  useCustomHover({ renderer: gl, mouse, camera, size, pointsRef, onPointHover, onPointOut });\n\n  // Initialize arrays\n  const positionsArray = useMemo(() => new Float32Array(nPoints*3), []);\n  const colorsArray = useMemo(() => new Float32Array(nPoints*3), []);\n\n  // Initialize springs\n  const [ { pointsSpring, colorsSpring }, setSpring ] = useSpring(() => ({\n    // initial position\n    pointsSpring: points,\n    colorsSpring: Array(nPoints*3).fill(1),\n  }));\n\n  // Animation effects\n  useEffect(() => {\n    setSpring({ pointsSpring: points });\n  }, [ points, setSpring ]);\n\n  useEffect(() => {\n    setSpring({ colorsSpring: colors });\n  }, [ colors, setSpring ]);\n\n  // Animate point change\n  useFrame(() => {\n    pointsSpring.getValue().forEach((v,i) => {\n      const value = (i%3) === 0 ? v*aspect : v; // consider aspect\n      positionsArray[i] = value;\n    });\n    colorsSpring.getValue().forEach((v,i) => {\n      colorsArray[i] = v;\n    })\n    geometryRef.current.attributes.position.needsUpdate = true;\n    geometryRef.current.attributes.color.needsUpdate = true;\n  });\n\n  useEffect(() => {\n    scene.background = backgroundColor;\n  }, [ scene ]);\n\n  return (\n    <group>\n\n      <mesh ref={ref}>\n        <points ref={pointsRef}>\n          <bufferGeometry\n            attach='geometry'\n            ref={geometryRef}\n          >\n            <bufferAttribute\n              attachObject={['attributes', 'position']}\n              count={points.length / 3}\n              array={positionsArray}\n              itemSize={3}\n              usage={THREE.DynamicDrawUsage}\n            />\n            <bufferAttribute\n              attachObject={['attributes', 'color']}\n              count={points.length / 3}\n              array={colorsArray}\n              itemSize={3}\n              usage={THREE.DynamicDrawUsage}\n            />\n          </bufferGeometry>\n          <pointsMaterial\n            attach='material'\n            size={pointsSize}\n            map={sprite}\n            transparent={true}\n            alphaTest={0.5}\n            sizeAttenuation={false}\n            vertexColors={THREE.VertexColors}\n          />\n        </points>\n      </mesh>\n\n      <mesh>\n        <points>\n          <bufferGeometry\n            attach='geometry'\n            ref={highlightRef}\n          >\n            <bufferAttribute\n              attachObject={['attributes', 'position']}\n              count={highlightPoint.show}\n              array={highlightPoint.point}\n              itemSize={3}\n              usage={THREE.DynamicDrawUsage}\n            /> \n            <bufferAttribute\n              attachObject={['attributes', 'color']}\n              count={1}\n              array={highlightPoint.color}\n              itemSize={3}\n              usage={THREE.DynamicDrawUsage}\n            />\n          </bufferGeometry>\n          <pointsMaterial\n            attach='material'\n            size={highlightPointSize}\n            map={sprite}\n            transparent={true}\n            alphaTest={0.5}\n            sizeAttenuation={false}\n            vertexColors={THREE.VertexColors}\n          />\n        </points>\n      </mesh>\n\n    </group>\n\n  );\n};\n\nconst App = () => {\n  const eaData = useEAData('filepath');\n  const n = eaData.n;\n  const [ speed, setSpeed ] = useState(defaultSpeed);\n  const [ time, setTime ] = useState(0);\n  const [ play, setPlay ] = useState(false);\n  const [ hoverData, setHoverData] = useState('');\n  const data = useMemo(() => ({\n    // points: eaData.points[time],\n    // colors: eaData.colors[time],\n    // pointsData: eaData.pointsData[time]\n    points: getRandomPoints(),\n    colors: getRandomColors(),\n    pointsData: getRandomColors()\n  }), [ time ]);\n\n  const playRef = useRef();\n  playRef.current = { n, time, speed, play };\n\n  const playFunc = () => {\n    const { n, time, speed, play } = playRef.current;\n    if ( (time < (n-1)) & play ) {\n      setTime(time + 1);\n      setTimeout(playFunc, speed);\n    } else {\n      setPlay(false);\n    }\n  };\n\n  const tooglePlay = () => {\n    const { speed, play } = playRef.current;\n    if ( !play ) {\n      setPlay(true);\n      setTimeout(playFunc, speed);\n    } else {\n      setPlay(false);\n    }\n  };\n\n  return (\n    <div style={{height: '100%'}}>\n      <div className='canvas-container h-100'>\n        <Canvas\n          camera={{\n            fov: fov,\n            near: 0.1,\n            far: far+1,\n            position: [0, 0, defaultCameraZoom]\n          }}\n        >\n          <Scene\n            data={data}\n            setHoverData={setHoverData}\n          />\n        </Canvas>\n        {hoverData}\n        <ProgressBar\n          animated={play}\n          min={0}\n          max={n-1}\n          now={time}\n          label={`${time}/${n-1}`}\n        />\n        <div className='controllers row justify-content-center'>\n          <div className='button-container'>\n            <button\n              type='button'\n              className='btn btn-default'\n              onClick={() => setTime(0)}\n            >\n              <FontAwesomeIcon icon={faStepBackward} />\n            </button>\n            <button\n              type='button'\n              className='btn btn-default'\n              onClick={() => setTime(d => Math.max(d-1, 0) )}\n            >\n              <FontAwesomeIcon icon={faCaretLeft} />\n            </button>\n            <button\n              type='button'\n              className='btn btn-default'\n              onClick={tooglePlay}\n            >\n              <FontAwesomeIcon icon={play ? faPause : faPlay} />\n            </button>\n            <button\n              type='button'\n              className='btn btn-default'\n              onClick={() => setTime(d => Math.min(d+1, n-1) )}\n            >\n              <FontAwesomeIcon icon={faCaretRight} />\n            </button>\n            <button\n              type='button'\n              className='btn btn-default'\n              onClick={() => setTime(n-1)}\n            >\n              <FontAwesomeIcon icon={faStepForward} />\n            </button>\n          </div>\n          <div className='speed-controller row'>\n            <span className='col'>Speed</span>\n            <Slider\n              className='slider col'\n              defaultValue={defaultSpeed}\n              getAriaValueText={d => d}\n              valueLabelDisplay='auto'\n              min={0}\n              max={5000}\n              step={100}\n              marks\n              onChange={(e,value) => setSpeed(value) }\n            />\n          </div>\n        </div>\n        <div className='git-info row justify-content-right'>\n          <a href='https://github.com/renato145/show_evolution'>Source code</a>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\n\nconst hoverWidth = 150;\n\nexport const HoverDescription = ({ description, top, left, size }) => {\n  const showLeft = (left+hoverWidth) > size.width\n    ? size.right - hoverWidth\n    : Math.max(left-hoverWidth/2, size.left);\n\n  return (\n    <div\n      className='hover-description'\n      style={{\n        top: top,\n        left: showLeft,\n        width: hoverWidth\n      }}\n    >\n      {description}\n    </div>);\n};\n","import { useMemo } from 'react';\n\nexport const useEAData = url => ( \n  useMemo(() => {\n      return {\n        n: 10\n      };\n  }, [ url ])\n);"],"sourceRoot":""}