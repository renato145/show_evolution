{"version":3,"sources":["d3Controls.js","useCustomHover.js","useEAData.js","sliders.js","FileUpload.js","index.js","HoverDescription.js"],"names":["toRadians","angle","Math","PI","d3Controls","fov","near","far","defaultCameraZoom","renderer","camera","size","width","height","getScaleFromZ","z","tan","getZFromScale","scale","threeZoom","zoom","scaleExtent","on","x","y","k","position","set","zoomHandler","event","transform","view","select","domElement","call","initialScale","initialTransform","zoomIdentity","translate","THREE","require","getColor","d","color","Color","toArray","computeColors","data","map","is_best","is_feasible","flat","ProgressBarSlider","withStyles","root","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","SpeedSlider","margintop","marginleft","top","background","ProgressBar","min","max","now","label","onChange","className","defaultValue","valueLabelDisplay","aria-label","value","step","Typography","SpeedBar","valueLabelFormat","FileUpload","setContent","ref","useRef","reader","useMemo","fr","FileReader","onload","e","JSON","parse","result","type","style","display","accept","readAsText","target","files","onClick","current","click","sprite","TextureLoader","load","Scene","points","colors","pointsData","setHoverData","nPoints","useThree","scene","aspect","gl","mouse","pointsRef","geometryRef","useEffect","highlightRef","highlightPoint","point","Float32Array","show","onPointHover","useCallback","index","positionsArray","slice","forEach","i","colorsArray","attributes","needsUpdate","description","showLeft","right","hoverWidth","HoverDescription","onPointOut","raycaster","Raycaster","params","Points","threshold","checkIntersects","setFromCamera","intersects","intersectObject","intersect","sort","distanceToRay","project","addScalar","divideScalar","useCustomHover","useSpring","pointsSpring","colorsSpring","Array","fill","setSpring","useFrame","getValue","v","attach","attachObject","count","length","array","itemSize","usage","DynamicDrawUsage","transparent","alphaTest","sizeAttenuation","vertexColors","VertexColors","ReactDOM","render","useState","fileData","setFileData","eaData","sourceData","limits","n","Object","keys","times","time","maxTime","scaleLinear","domain","range","idx","fitness_value","toFixed","constraints_sum","useEAData","speed","setSpeed","setTime","play","setPlay","hoverData","thisTime","playRef","playCb","setPlayCb","removeTimeout","clearTimeout","playFunc","setTimeout","tooglePlay","document","addEventListener","code","icon","faStepBackward","faCaretLeft","faPause","faPlay","faCaretRight","faStepForward","href","getElementById"],"mappings":"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","file":"static/js/main.f172b1df.chunk.js","sourcesContent":["// From https://observablehq.com/@grantcuster/using-three-js-for-2d-data-visualization\nimport { zoom, event, select, zoomIdentity } from 'd3';\n\nconst toRadians = angle => (angle * (Math.PI/180));\n\nexport const d3Controls = ({ fov, near, far, defaultCameraZoom, renderer, camera, size }) => {\n  const { width, height } = size;\n\n  const zoomHandler = ({ x, y, k }) => {\n    camera.position.set(\n      -(x -  width/2) / k, // x\n       (y - height/2) / k, // y\n       getZFromScale(k)    // z\n    )\n  };\n\n  const getScaleFromZ = z => ( height / (2 * z * Math.tan(toRadians(fov/2))) );\n  const getZFromScale = scale => ( height / scale / (2 * Math.tan(toRadians(fov/2))) );\n\n  const threeZoom = zoom()\n    .scaleExtent([getScaleFromZ(far), getScaleFromZ(near)])\n    .on('zoom', () => {\n      zoomHandler(event.transform);\n    });\n  \n  // Add zoom listener\n  const view = select(renderer.domElement);\n  view.call(threeZoom);\n  const initialScale = getScaleFromZ(defaultCameraZoom);\n  const initialTransform = zoomIdentity\n    .translate(width/2, height/2)\n    .scale(initialScale);    \n  threeZoom.transform(view, initialTransform);\n  camera.position.set(0, 0, defaultCameraZoom);\n\n  // Double click resets camera\n  view.on('dblclick.zoom', () => {\n    threeZoom.transform(view, initialTransform);\n    camera.position.set(0, 0, defaultCameraZoom);\n  });\n};\n","import React, { useMemo, useEffect, useCallback } from 'react';\nimport { select } from 'd3';\nconst THREE = require('three');\n\nexport const useCustomHover = ({\n  renderer,\n  mouse,\n  camera,\n  size,\n  pointsRef,\n  onPointHover,\n  onPointOut\n  }) => {\n  const raycaster = useMemo(() => {\n    const raycaster = new THREE.Raycaster();\n    raycaster.params.Points.threshold = 1;\n    return raycaster;\n  }, []);\n\n  const checkIntersects = useCallback( position => {\n    raycaster.setFromCamera(position, camera);\n    let intersects = raycaster.intersectObject(pointsRef.current);\n    if (intersects[0]) {\n      const intersect = intersects.sort(({ distanceToRay }) => distanceToRay)[0];\n      const point = intersect.point;\n      point.project(camera).addScalar(1).divideScalar(2);\n      const x = point.x * size.width;\n      const y = (1-point.y) * size.height;\n      onPointHover({ index: intersect.index, x, y });\n    } else {\n      onPointOut();\n    }\n  }, [ size, onPointHover ]);\n\n  useEffect(() => {\n    const view = select(renderer.domElement);\n    view.on('mousemove', () => {\n      checkIntersects(mouse);\n    });\n  }, [ renderer, mouse, checkIntersects ]);\n\n};\n\n","import { useMemo } from 'react';\nimport { scaleLinear, max, json } from 'd3';\nimport eaData from './data/ea_data.json';\nconst THREE = require('three');\n\nconst pointsScale = 25; // Size to fill the screen\n\n// const colors = ['#ffd700', '#ffb14e', '#fa8775', '#ea5f94', '#cd34b5', '#9d02d7', '#0000ff'];\n\nconst getColor = d => {\n  let color;\n  switch (d) {\n    case 'best':\n      color = new THREE.Color('#5edc1f');\n      break;\n  \n    case 'infeasible':\n      color = new THREE.Color('#dd3300');\n      break;\n\n    default:\n      color = new THREE.Color('#0000ff');\n  }\n  return color.toArray();\n};\n\nconst computeColors = data => {\n  const colors = data.map(d => (\n    d.is_best\n      ? 'best'\n      : d.is_feasible ? 'normal' : 'infeasible'\n  )).map(getColor).flat();\n  return colors;\n};\n\nexport const useEAData = ( fileData ) => ( \n  useMemo(() => {\n    const sourceData = fileData ? fileData : eaData;\n    const { data, limits } = sourceData;\n    const n = data.length;\n    const nPoints = Object.keys(data[0]).length;\n    const times = data.map(d => d[0].time);\n    const maxTime = max(times);\n    const scale = scaleLinear().domain(limits).range([-pointsScale,pointsScale]);\n    const points = data.map(d => d.map(point => [...point.data.map(scale),0]).flat());\n    const colors = data.map(computeColors);\n\n    const pointsData = data.map(d => d.map( point => (\n      `Individual ${point.idx} ${point.is_best ? '(Best!)' : ''}\n       Fitness value: ${point.fitness_value.toFixed(2)}\n       Constraints sum: ${point.constraints_sum.toFixed(2)}\n       Feasible: ${point.is_feasible}\n       Time: ${point.time}\n       `\n    )));\n\n    return { n, nPoints, times, maxTime, points, colors, pointsData };\n  }, [ fileData ])\n);","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst ProgressBarSlider = withStyles({ \n  root: {\n    // color: '#52af77',\n    height: 8,\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus,&:hover,&$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\nconst SpeedSlider = withStyles({\n  root: {\n    color: '#8f8f8f',\n  },\n  thumb: {\n    height: 15,\n    width: 15,\n    margintop: -5,\n    marginleft: -5,\n    color: '#787878',\n  },\n  valueLabel: {\n    top: 20,\n    '& *': {\n      background: 'transparent',\n      color: '#000',\n      width: 50\n    },\n  },\n  rail: {\n    height: 5,\n  },\n})(Slider);\n\nexport const ProgressBar = ({ min, max, now, label, onChange }) => {\n  return (\n    <div className='row'>\n      <ProgressBarSlider\n        className='col-8 offset-2'\n        defaultValue={0}\n        valueLabelDisplay='off'\n        aria-label='pretto slider'\n        min={min}\n        max={max}\n        value={now}\n        step={1}\n        onChange={onChange}\n      />\n      <Typography className='col-2 align-self-center'>{label}</Typography>\n    </div>\n  );\n};\n\nexport const SpeedBar = ({ min, max, step, defaultValue, onChange }) => {\n  return (\n    <div className='row justify-content-center speed-slider'>\n      <SpeedSlider\n        className='col-3'\n        defaultValue={defaultValue}\n        valueLabelFormat={d => `${d} ms`}\n        valueLabelDisplay='on'\n        aria-label='pretto slider'\n        min={min}\n        max={max}\n        step={step}\n        onChange={onChange}\n        track={false}\n      />\n    </div>\n  );\n};\n","import React, { useMemo, useRef } from 'react';\n\nexport const FileUpload = ({ className, setContent }) => { \n  const ref = useRef();\n  const reader = useMemo(() => {\n    const fr = new FileReader();\n    fr.onload = e => {\n      setContent(JSON.parse(fr.result));\n    };\n    return fr;\n  }, []);\n  return (\n    <div className={className}>\n      <input\n        ref={ref}\n        type='file'\n        style={{display: 'none'}}\n        accept='.json'\n        onChange={e => {\n          reader.readAsText(e.target.files[0]);\n        }}\n      />\n      <button\n        className='btn btn-outline-secondary btn-sm'\n        onClick={() => ref.current.click()}\n      >\n        Upload File\n      </button>\n    </div>\n  );\n };\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React, { useRef, useMemo, useState, useEffect, useCallback } from 'react';\nimport ReactDOM from 'react-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay, faPause, faCaretLeft, faCaretRight, faStepBackward, faStepForward } from '@fortawesome/free-solid-svg-icons'\nimport { Canvas, useThree, useFrame } from 'react-three-fiber';\nimport { useSpring } from 'react-spring-three';\nimport { HoverDescription } from './HoverDescription';\nimport { d3Controls } from './d3Controls';\nimport { useCustomHover } from './useCustomHover';\nimport { useEAData } from './useEAData';\nimport { ProgressBar, SpeedBar } from './sliders';\nimport { FileUpload } from './FileUpload';\nimport './index.css';\nconst THREE = require('three');\n// const d3 = require('d3');\n\n// controls\nconst defaultSpeed = 250;\n// camera settings\nconst fov = 30;\nconst near = 1;\nconst far = 150;\nconst defaultCameraZoom = 100;\n// canvas settings\nconst backgroundColor = new THREE.Color(0xefefef);\n// points settings\nconst pointsSize = 10;\nconst highlightPointSize = 25;\nconst sprite = new THREE.TextureLoader().load('textures/discNoShadow.png');\n\nconst Scene = ({\n  data: { points, colors, pointsData },\n  setHoverData,\n  nPoints\n}) => {\n  const { scene, aspect, gl, camera, size, mouse } = useThree();\n  const ref = useRef();\n  const pointsRef = useRef();\n  const geometryRef = useRef();\n\n  // d3 controls (zoom and pan)\n  useEffect(() => {\n    d3Controls({ fov, near, far, defaultCameraZoom, renderer: gl, camera, size});\n  }, [ gl, camera, size ])\n\n  // Custom hover\n  const highlightRef = useRef();\n  const highlightPoint = useMemo(() => ({\n    point: new Float32Array(3),\n    color: new Float32Array(3),\n    show: false,\n  }), []);\n\n  const onPointHover = useCallback(( { index, x, y } ) => {\n    // Highlight Point\n    positionsArray.slice(index*3,(index+1)*3).forEach( (d, i) => {highlightPoint.point[i] = d});\n    colorsArray.slice(index*3,(index+1)*3).forEach( (d, i) => {highlightPoint.color[i] = d});\n    highlightPoint.show = true;\n    highlightRef.current.attributes.position.needsUpdate = true;\n    highlightRef.current.attributes.color.needsUpdate = true;\n\n    // hover description\n    setHoverData(HoverDescription({\n      description: pointsData[index],\n      top: y,\n      left: x,\n      size\n    }));\n  }, [ points, size, pointsData, colors ]);\n\n  const onPointOut = () => {\n    highlightPoint.show = false;\n    setHoverData('');\n  };\n\n  useCustomHover({ renderer: gl, mouse, camera, size, pointsRef, onPointHover, onPointOut });\n\n  // Initialize arrays\n  const positionsArray = useMemo(() => new Float32Array(nPoints*3), []);\n  const colorsArray = useMemo(() => new Float32Array(nPoints*3), []);\n\n  // Initialize springs\n  const [ { pointsSpring, colorsSpring }, setSpring ] = useSpring(() => ({\n    // initial position\n    pointsSpring: points,\n    colorsSpring: Array(nPoints*3).fill(1),\n  }));\n\n  // Animation effects\n  useEffect(() => {\n    setSpring({ pointsSpring: points });\n  }, [ points, setSpring ]);\n\n  useEffect(() => {\n    setSpring({ colorsSpring: colors });\n  }, [ colors, setSpring ]);\n\n  // Animate point change\n  useFrame(() => {\n    pointsSpring.getValue().forEach((v,i) => {\n      const value = (i%3) === 0 ? v*aspect : v; // consider aspect\n      positionsArray[i] = value;\n    });\n    colorsSpring.getValue().forEach((v,i) => {\n      colorsArray[i] = v;\n    })\n    geometryRef.current.attributes.position.needsUpdate = true;\n    geometryRef.current.attributes.color.needsUpdate = true;\n  });\n\n  useEffect(() => {\n    scene.background = backgroundColor;\n  }, [ scene ]);\n\n  return (\n    <group>\n\n      <mesh ref={ref}>\n        <points ref={pointsRef}>\n          <bufferGeometry\n            attach='geometry'\n            ref={geometryRef}\n          >\n            <bufferAttribute\n              attachObject={['attributes', 'position']}\n              count={points.length / 3}\n              array={positionsArray}\n              itemSize={3}\n              usage={THREE.DynamicDrawUsage}\n            />\n            <bufferAttribute\n              attachObject={['attributes', 'color']}\n              count={points.length / 3}\n              array={colorsArray}\n              itemSize={3}\n              usage={THREE.DynamicDrawUsage}\n            />\n          </bufferGeometry>\n          <pointsMaterial\n            attach='material'\n            size={pointsSize}\n            map={sprite}\n            transparent={true}\n            alphaTest={0.5}\n            sizeAttenuation={false}\n            vertexColors={THREE.VertexColors}\n          />\n        </points>\n      </mesh>\n\n      <mesh>\n        <points>\n          <bufferGeometry\n            attach='geometry'\n            ref={highlightRef}\n          >\n            <bufferAttribute\n              attachObject={['attributes', 'position']}\n              count={highlightPoint.show}\n              array={highlightPoint.point}\n              itemSize={3}\n              usage={THREE.DynamicDrawUsage}\n            /> \n            <bufferAttribute\n              attachObject={['attributes', 'color']}\n              count={1}\n              array={highlightPoint.color}\n              itemSize={3}\n              usage={THREE.DynamicDrawUsage}\n            />\n          </bufferGeometry>\n          <pointsMaterial\n            attach='material'\n            size={highlightPointSize}\n            map={sprite}\n            transparent={true}\n            alphaTest={0.5}\n            sizeAttenuation={false}\n            vertexColors={THREE.VertexColors}\n          />\n        </points>\n      </mesh>\n\n    </group>\n\n  );\n};\n\nconst App = () => {\n  const [ fileData, setFileData ] = useState(null);\n  const eaData = useEAData(fileData);\n  const { n, nPoints, maxTime } = eaData;\n  const [ speed, setSpeed ] = useState(defaultSpeed);\n  const [ time, setTime ] = useState(0);\n  const [ play, setPlay ] = useState(false);\n  const [ hoverData, setHoverData] = useState('');\n  const data = useMemo(() => ({\n    points: eaData.points[time],\n    colors: eaData.colors[time],\n    pointsData: eaData.pointsData[time],\n    thisTime: eaData.times[time]\n  }), [ time, eaData ]);\n\n  const playRef = useRef();\n  const [ playCb, setPlayCb ] = useState(null)\n  playRef.current = { n, time, speed, play };\n  \n  const removeTimeout = () => {\n    if ( playCb ) {\n      clearTimeout(playCb);\n      setPlayCb(null);\n    }\n  };\n\n  const playFunc = () => {\n    const { n, time, speed, play } = playRef.current;\n    if ( (time < (n-1)) & play ) {\n      setTime(time + 1);\n      setPlayCb(setTimeout(playFunc, speed));\n    } else {\n      setPlay(false);\n      removeTimeout();\n    }\n  };\n\n  const tooglePlay = () => {\n    const { speed, play } = playRef.current;\n    if ( !play ) {\n      setPlay(true);\n      setPlayCb(setTimeout(playFunc, speed));\n    } else {\n      setPlay(false);\n      removeTimeout();\n    }\n  };\n\n  // Playback keys\n  useEffect(() => {\n    document.addEventListener('keydown', e => {\n      if(e.code==='Space'){\n        tooglePlay();\n      }\n    });\n  }, [])\n\n  return (\n    <div className='main-container'>\n      <div className='canvas-container'>\n        <div className='time-dialog'>\n          {`Time: ${data.thisTime}/${maxTime}`}\n        </div>\n        <Canvas\n          camera={{\n            fov: fov,\n            near: 0.1,\n            far: far+1,\n            position: [0, 0, defaultCameraZoom]\n          }}\n        >\n          <Scene\n            data={data}\n            setHoverData={setHoverData}\n            nPoints={nPoints}\n          />\n        </Canvas>\n        {hoverData}\n      </div>\n      <div className='html-bottom-container'>\n        <ProgressBar\n          min={0}\n          max={n-1}\n          now={time}\n          label={`${time}/${n-1} gen`}\n          onChange={(e,value) => setTime(value) }\n        />\n        <div className='controllers row justify-content-center'>\n          <div className='button-container'>\n            <button\n              type='button'\n              className='btn btn-default'\n              onClick={() => setTime(0)}\n            >\n              <FontAwesomeIcon icon={faStepBackward} />\n            </button>\n            <button\n              type='button'\n              className='btn btn-default'\n              onClick={() => setTime(d => Math.max(d-1, 0) )}\n            >\n              <FontAwesomeIcon icon={faCaretLeft} />\n            </button>\n            <button\n              type='button'\n              className='btn btn-default'\n              onClick={tooglePlay}\n            >\n              <FontAwesomeIcon icon={play ? faPause : faPlay} />\n            </button>\n            <button\n              type='button'\n              className='btn btn-default'\n              onClick={() => setTime(d => Math.min(d+1, n-1) )}\n            >\n              <FontAwesomeIcon icon={faCaretRight} />\n            </button>\n            <button\n              type='button'\n              className='btn btn-default'\n              onClick={() => setTime(n-1)}\n            >\n              <FontAwesomeIcon icon={faStepForward} />\n            </button>\n          </div>\n        </div>\n        <SpeedBar\n          min={25}\n          max={2500}\n          step={25}\n          defaultValue={defaultSpeed}\n          onChange={(e,value) => setSpeed(value)}\n        />\n        <FileUpload\n          className='file-upload offset-1'\n          setContent={d => setFileData(d)}\n        />\n        <div className='git-info row justify-content-end'>\n          <a href='https://github.com/renato145/show_evolution'>Source code</a>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\n\nconst hoverWidth = 200;\n\nexport const HoverDescription = ({ description, top, left, size }) => {\n  const showLeft = (left+hoverWidth) > size.width\n    ? size.right - hoverWidth\n    : Math.max(left-hoverWidth/2, size.left);\n\n  return (\n    <div\n      className='hover-description'\n      style={{\n        top: top,\n        left: showLeft,\n        width: hoverWidth\n      }}\n    >\n      {description}\n    </div>);\n};\n"],"sourceRoot":""}