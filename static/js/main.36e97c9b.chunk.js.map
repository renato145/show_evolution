{"version":3,"sources":["d3Controls.js","useCustomHover.js","useEAData.js","sliders.js","index.js","HoverDescription.js"],"names":["toRadians","angle","Math","PI","d3Controls","fov","near","far","defaultCameraZoom","renderer","camera","size","width","height","getScaleFromZ","z","tan","getZFromScale","scale","threeZoom","zoom","scaleExtent","on","x","y","k","position","set","zoomHandler","event","transform","view","select","domElement","call","initialScale","initialTransform","zoomIdentity","translate","THREE","require","getColor","d","color","Color","toArray","computeColors","data","map","is_best","is_feasible","flat","ProgressBarSlider","withStyles","root","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","SpeedSlider","margintop","marginleft","top","background","ProgressBar","min","max","now","label","onChange","className","defaultValue","valueLabelDisplay","aria-label","value","step","Typography","SpeedBar","valueLabelFormat","sprite","TextureLoader","load","Scene","points","colors","pointsData","setHoverData","nPoints","useThree","scene","aspect","gl","mouse","ref","useRef","pointsRef","geometryRef","useEffect","highlightRef","highlightPoint","useMemo","point","Float32Array","show","onPointHover","useCallback","index","positionsArray","slice","forEach","i","colorsArray","current","attributes","needsUpdate","toFixed","description","showLeft","right","hoverWidth","style","HoverDescription","onPointOut","raycaster","Raycaster","params","Points","threshold","checkIntersects","setFromCamera","intersects","intersectObject","intersect","sort","distanceToRay","project","addScalar","divideScalar","useCustomHover","useSpring","pointsSpring","colorsSpring","Array","fill","setSpring","useFrame","getValue","v","attach","attachObject","count","length","array","itemSize","usage","DynamicDrawUsage","transparent","alphaTest","sizeAttenuation","vertexColors","VertexColors","ReactDOM","render","eaData","limits","n","Object","keys","times","time","maxTime","scaleLinear","domain","range","idx","fitness_value","constraints_sum","useState","speed","setSpeed","setTime","play","setPlay","hoverData","thisTime","playRef","playCb","setPlayCb","removeTimeout","clearTimeout","playFunc","setTimeout","tooglePlay","document","addEventListener","e","code","type","onClick","icon","faStepBackward","faCaretLeft","faPause","faPlay","faCaretRight","faStepForward","href","getElementById"],"mappings":"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","file":"static/js/main.36e97c9b.chunk.js","sourcesContent":["// From https://observablehq.com/@grantcuster/using-three-js-for-2d-data-visualization\nimport { zoom, event, select, zoomIdentity } from 'd3';\n\nconst toRadians = angle => (angle * (Math.PI/180));\n\nexport const d3Controls = ({ fov, near, far, defaultCameraZoom, renderer, camera, size }) => {\n  const { width, height } = size;\n\n  const zoomHandler = ({ x, y, k }) => {\n    camera.position.set(\n      -(x -  width/2) / k, // x\n       (y - height/2) / k, // y\n       getZFromScale(k)    // z\n    )\n  };\n\n  const getScaleFromZ = z => ( height / (2 * z * Math.tan(toRadians(fov/2))) );\n  const getZFromScale = scale => ( height / scale / (2 * Math.tan(toRadians(fov/2))) );\n\n  const threeZoom = zoom()\n    .scaleExtent([getScaleFromZ(far), getScaleFromZ(near)])\n    .on('zoom', () => {\n      zoomHandler(event.transform);\n    });\n  \n  // Add zoom listener\n  const view = select(renderer.domElement);\n  view.call(threeZoom);\n  const initialScale = getScaleFromZ(defaultCameraZoom);\n  const initialTransform = zoomIdentity\n    .translate(width/2, height/2)\n    .scale(initialScale);    \n  threeZoom.transform(view, initialTransform);\n  camera.position.set(0, 0, defaultCameraZoom);\n\n  // Double click resets camera\n  view.on('dblclick.zoom', () => {\n    threeZoom.transform(view, initialTransform);\n    camera.position.set(0, 0, defaultCameraZoom);\n  });\n};\n","import React, { useMemo, useEffect, useCallback } from 'react';\nimport { select } from 'd3';\nconst THREE = require('three');\n\nexport const useCustomHover = ({\n  renderer,\n  mouse,\n  camera,\n  size,\n  pointsRef,\n  onPointHover,\n  onPointOut\n  }) => {\n  const raycaster = useMemo(() => {\n    const raycaster = new THREE.Raycaster();\n    raycaster.params.Points.threshold = 1;\n    return raycaster;\n  }, []);\n\n  const checkIntersects = useCallback( position => {\n    raycaster.setFromCamera(position, camera);\n    let intersects = raycaster.intersectObject(pointsRef.current);\n    if (intersects[0]) {\n      const intersect = intersects.sort(({ distanceToRay }) => distanceToRay)[0];\n      const point = intersect.point;\n      point.project(camera).addScalar(1).divideScalar(2);\n      const x = point.x * size.width;\n      const y = (1-point.y) * size.height;\n      onPointHover({ index: intersect.index, x, y });\n    } else {\n      onPointOut();\n    }\n  }, [ size, onPointHover ]);\n\n  useEffect(() => {\n    const view = select(renderer.domElement);\n    view.on('mousemove', () => {\n      checkIntersects(mouse);\n    });\n  }, [ renderer, mouse, checkIntersects ]);\n\n};\n\n","import { useMemo } from 'react';\nimport { scaleLinear, max } from 'd3';\nimport eaData from './data/ea_data.json';\nconst THREE = require('three');\n\nconst pointsScale = 25; // Size to fill the screen\n\n// const colors = ['#ffd700', '#ffb14e', '#fa8775', '#ea5f94', '#cd34b5', '#9d02d7', '#0000ff'];\n\nconst getColor = d => {\n  let color;\n  switch (d) {\n    case 'best':\n      color = new THREE.Color('#5edc1f');\n      break;\n  \n    case 'infeasible':\n      color = new THREE.Color('#dd3300');\n      break;\n\n    default:\n      color = new THREE.Color('#0000ff');\n  }\n  return color.toArray();\n};\n\nconst computeColors = data => {\n  const colors = data.map(d => (\n    d.is_best\n      ? 'best'\n      : d.is_feasible ? 'normal' : 'infeasible'\n  )).map(getColor).flat();\n  return colors;\n};\n\nexport const useEAData = () => ( \n  useMemo(() => {\n    const { data, limits } = eaData;\n    const n = data.length;\n    const nPoints = Object.keys(data[0]).length;\n    const times = data.map(d => d[0].time);\n    const maxTime = max(times);\n    const scale = scaleLinear().domain(limits).range([-pointsScale,pointsScale]);\n    const points = data.map(d => d.map(point => [...point.data.map(scale),0]).flat());\n    const colors = data.map(computeColors);\n\n    const pointsData = data.map(d => d.map( point => (\n      `Individual ${point.idx} ${point.is_best ? '(Best!)' : ''}\n       Fitness value: ${point.fitness_value.toFixed(2)}\n       Constraints sum: ${point.constraints_sum.toFixed(2)}\n       Feasible: ${point.is_feasible}\n       Time: ${point.time}\n       `\n    )));\n\n    return { n, nPoints, times, maxTime, points, colors, pointsData };\n  }, [])\n);","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst ProgressBarSlider = withStyles({ \n  root: {\n    // color: '#52af77',\n    height: 8,\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus,&:hover,&$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\nconst SpeedSlider = withStyles({\n  root: {\n    color: '#8f8f8f',\n  },\n  thumb: {\n    height: 15,\n    width: 15,\n    margintop: -5,\n    marginleft: -5,\n    color: '#787878',\n  },\n  valueLabel: {\n    top: 20,\n    '& *': {\n      background: 'transparent',\n      color: '#000',\n      width: 50\n    },\n  },\n  rail: {\n    height: 5,\n  },\n})(Slider);\n\nexport const ProgressBar = ({ min, max, now, label, onChange }) => {\n  return (\n    <div className='row'>\n      <ProgressBarSlider\n        className='col-8 offset-2'\n        defaultValue={0}\n        valueLabelDisplay='off'\n        aria-label='pretto slider'\n        min={min}\n        max={max}\n        value={now}\n        step={1}\n        onChange={onChange}\n      />\n      <Typography className='col-2 align-self-center'>{label}</Typography>\n    </div>\n  );\n};\n\nexport const SpeedBar = ({ min, max, step, defaultValue, onChange }) => {\n  return (\n    <div className='row justify-content-center'>\n      <SpeedSlider\n        className='col-3'\n        defaultValue={defaultValue}\n        valueLabelFormat={d => `${d} ms`}\n        valueLabelDisplay='on'\n        aria-label='pretto slider'\n        min={min}\n        max={max}\n        step={step}\n        onChange={onChange}\n        track={false}\n      />\n    </div>\n  );\n};\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React, { useRef, useMemo, useState, useEffect, useCallback } from 'react';\nimport ReactDOM from 'react-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay, faPause, faCaretLeft, faCaretRight, faStepBackward, faStepForward } from '@fortawesome/free-solid-svg-icons'\nimport { Canvas, useThree, useFrame } from 'react-three-fiber';\nimport { useSpring } from 'react-spring-three';\nimport { HoverDescription } from './HoverDescription';\nimport { d3Controls } from './d3Controls';\nimport { useCustomHover } from './useCustomHover';\nimport { useEAData } from './useEAData';\nimport { ProgressBar, SpeedBar } from './sliders';\nimport './index.css';\nconst THREE = require('three');\n// const d3 = require('d3');\n\n// controls\nconst defaultSpeed = 250;\n// camera settings\nconst fov = 30;\nconst near = 1;\nconst far = 150;\nconst defaultCameraZoom = 100;\n// canvas settings\nconst backgroundColor = new THREE.Color(0xefefef);\n// points settings\nconst pointsSize = 10;\nconst highlightPointSize = 25;\nconst sprite = new THREE.TextureLoader().load('textures/discNoShadow.png');\n\nconst Scene = ({\n  data: { points, colors, pointsData },\n  setHoverData,\n  nPoints\n}) => {\n  const { scene, aspect, gl, camera, size, mouse } = useThree();\n  const ref = useRef();\n  const pointsRef = useRef();\n  const geometryRef = useRef();\n\n  // d3 controls (zoom and pan)\n  useEffect(() => {\n    d3Controls({ fov, near, far, defaultCameraZoom, renderer: gl, camera, size});\n  }, [ gl, camera, size ])\n\n  // Custom hover\n  const highlightRef = useRef();\n  const highlightPoint = useMemo(() => ({\n    point: new Float32Array(3),\n    color: new Float32Array(3),\n    show: false,\n  }), []);\n\n  const onPointHover = useCallback(( { index, x, y } ) => {\n    // Highlight Point\n    positionsArray.slice(index*3,(index+1)*3).forEach( (d, i) => {highlightPoint.point[i] = d});\n    colorsArray.slice(index*3,(index+1)*3).forEach( (d, i) => {highlightPoint.color[i] = d});\n    highlightPoint.show = true;\n    highlightRef.current.attributes.position.needsUpdate = true;\n    highlightRef.current.attributes.color.needsUpdate = true;\n\n    // hover description\n    const pointColor = colors.slice(index*3, (index+1)*3).map(d => d.toFixed(2));\n    setHoverData(HoverDescription({\n      description: pointsData[index],\n      top: y,\n      left: x,\n      size\n    }));\n  }, [ points, size, pointsData, colors ]);\n\n  const onPointOut = () => {\n    highlightPoint.show = false;\n    setHoverData('');\n  };\n\n  useCustomHover({ renderer: gl, mouse, camera, size, pointsRef, onPointHover, onPointOut });\n\n  // Initialize arrays\n  const positionsArray = useMemo(() => new Float32Array(nPoints*3), []);\n  const colorsArray = useMemo(() => new Float32Array(nPoints*3), []);\n\n  // Initialize springs\n  const [ { pointsSpring, colorsSpring }, setSpring ] = useSpring(() => ({\n    // initial position\n    pointsSpring: points,\n    colorsSpring: Array(nPoints*3).fill(1),\n  }));\n\n  // Animation effects\n  useEffect(() => {\n    setSpring({ pointsSpring: points });\n  }, [ points, setSpring ]);\n\n  useEffect(() => {\n    setSpring({ colorsSpring: colors });\n  }, [ colors, setSpring ]);\n\n  // Animate point change\n  useFrame(() => {\n    pointsSpring.getValue().forEach((v,i) => {\n      const value = (i%3) === 0 ? v*aspect : v; // consider aspect\n      positionsArray[i] = value;\n    });\n    colorsSpring.getValue().forEach((v,i) => {\n      colorsArray[i] = v;\n    })\n    geometryRef.current.attributes.position.needsUpdate = true;\n    geometryRef.current.attributes.color.needsUpdate = true;\n  });\n\n  useEffect(() => {\n    scene.background = backgroundColor;\n  }, [ scene ]);\n\n  return (\n    <group>\n\n      <mesh ref={ref}>\n        <points ref={pointsRef}>\n          <bufferGeometry\n            attach='geometry'\n            ref={geometryRef}\n          >\n            <bufferAttribute\n              attachObject={['attributes', 'position']}\n              count={points.length / 3}\n              array={positionsArray}\n              itemSize={3}\n              usage={THREE.DynamicDrawUsage}\n            />\n            <bufferAttribute\n              attachObject={['attributes', 'color']}\n              count={points.length / 3}\n              array={colorsArray}\n              itemSize={3}\n              usage={THREE.DynamicDrawUsage}\n            />\n          </bufferGeometry>\n          <pointsMaterial\n            attach='material'\n            size={pointsSize}\n            map={sprite}\n            transparent={true}\n            alphaTest={0.5}\n            sizeAttenuation={false}\n            vertexColors={THREE.VertexColors}\n          />\n        </points>\n      </mesh>\n\n      <mesh>\n        <points>\n          <bufferGeometry\n            attach='geometry'\n            ref={highlightRef}\n          >\n            <bufferAttribute\n              attachObject={['attributes', 'position']}\n              count={highlightPoint.show}\n              array={highlightPoint.point}\n              itemSize={3}\n              usage={THREE.DynamicDrawUsage}\n            /> \n            <bufferAttribute\n              attachObject={['attributes', 'color']}\n              count={1}\n              array={highlightPoint.color}\n              itemSize={3}\n              usage={THREE.DynamicDrawUsage}\n            />\n          </bufferGeometry>\n          <pointsMaterial\n            attach='material'\n            size={highlightPointSize}\n            map={sprite}\n            transparent={true}\n            alphaTest={0.5}\n            sizeAttenuation={false}\n            vertexColors={THREE.VertexColors}\n          />\n        </points>\n      </mesh>\n\n    </group>\n\n  );\n};\n\nconst App = () => {\n  const eaData = useEAData();\n  const { n, nPoints, maxTime } = eaData;\n  const [ speed, setSpeed ] = useState(defaultSpeed);\n  const [ time, setTime ] = useState(0);\n  const [ play, setPlay ] = useState(false);\n  const [ hoverData, setHoverData] = useState('');\n  const data = useMemo(() => ({\n    points: eaData.points[time],\n    colors: eaData.colors[time],\n    pointsData: eaData.pointsData[time],\n    thisTime: eaData.times[time]\n  }), [ time ]);\n\n  const playRef = useRef();\n  const [ playCb, setPlayCb ] = useState(null)\n  playRef.current = { n, time, speed, play };\n  \n  const removeTimeout = () => {\n    if ( playCb ) {\n      clearTimeout(playCb);\n      setPlayCb(null);\n    }\n  };\n\n  const playFunc = () => {\n    const { n, time, speed, play } = playRef.current;\n    if ( (time < (n-1)) & play ) {\n      setTime(time + 1);\n      setPlayCb(setTimeout(playFunc, speed));\n    } else {\n      setPlay(false);\n      removeTimeout();\n    }\n  };\n\n  const tooglePlay = () => {\n    const { speed, play } = playRef.current;\n    if ( !play ) {\n      setPlay(true);\n      setPlayCb(setTimeout(playFunc, speed));\n    } else {\n      setPlay(false);\n      removeTimeout();\n    }\n  };\n\n  // Playback keys\n  useEffect(() => {\n    document.addEventListener('keydown', e => {\n      if(e.code==='Space'){\n        tooglePlay();\n      }\n    });\n  }, [])\n\n  return (\n    <div style={{height: '100%'}}>\n      <div className='canvas-container h-100'>\n        <div className='time-dialog'>\n          {`Time\\n${data.thisTime}/${maxTime}`}\n        </div>\n        <Canvas\n          camera={{\n            fov: fov,\n            near: 0.1,\n            far: far+1,\n            position: [0, 0, defaultCameraZoom]\n          }}\n        >\n          <Scene\n            data={data}\n            setHoverData={setHoverData}\n            nPoints={nPoints}\n          />\n        </Canvas>\n        {hoverData}\n        <ProgressBar\n          min={0}\n          max={n-1}\n          now={time}\n          label={`${time}/${n-1} gen`}\n          onChange={(e,value) => setTime(value) }\n        />\n        <div className='controllers row justify-content-center'>\n          <div className='button-container'>\n            <button\n              type='button'\n              className='btn btn-default'\n              onClick={() => setTime(0)}\n            >\n              <FontAwesomeIcon icon={faStepBackward} />\n            </button>\n            <button\n              type='button'\n              className='btn btn-default'\n              onClick={() => setTime(d => Math.max(d-1, 0) )}\n            >\n              <FontAwesomeIcon icon={faCaretLeft} />\n            </button>\n            <button\n              type='button'\n              className='btn btn-default'\n              onClick={tooglePlay}\n            >\n              <FontAwesomeIcon icon={play ? faPause : faPlay} />\n            </button>\n            <button\n              type='button'\n              className='btn btn-default'\n              onClick={() => setTime(d => Math.min(d+1, n-1) )}\n            >\n              <FontAwesomeIcon icon={faCaretRight} />\n            </button>\n            <button\n              type='button'\n              className='btn btn-default'\n              onClick={() => setTime(n-1)}\n            >\n              <FontAwesomeIcon icon={faStepForward} />\n            </button>\n          </div>\n        </div>\n        <SpeedBar\n          min={25}\n          max={2500}\n          step={25}\n          defaultValue={defaultSpeed}\n          onChange={(e,value) => setSpeed(value)}\n        />\n        <div className='git-info row justify-content-end'>\n          <a href='https://github.com/renato145/show_evolution'>Source code</a>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\n\nconst hoverWidth = 200;\n\nexport const HoverDescription = ({ description, top, left, size }) => {\n  const showLeft = (left+hoverWidth) > size.width\n    ? size.right - hoverWidth\n    : Math.max(left-hoverWidth/2, size.left);\n\n  return (\n    <div\n      className='hover-description'\n      style={{\n        top: top,\n        left: showLeft,\n        width: hoverWidth\n      }}\n    >\n      {description}\n    </div>);\n};\n"],"sourceRoot":""}